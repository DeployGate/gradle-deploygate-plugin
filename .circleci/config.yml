version: 2.1

executors: &executors
  acceptance_test:
    machine: true
    working_directory: ~/gradle-deploygate-plugin
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError" -Dorg.gradle.daemon=false'
      ANDROID_HOME: /home/circleci/android
  android_java:
    docker:
      - image: circleci/android:api-29
    working_directory: ~/gradle-deploygate-plugin
    environment:
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError" -Dorg.gradle.daemon=false'

commands: &commands
  download_sdk:
    parameters:
      version:
        type: string
      zip_hash:
        type: string
    steps:
      - restore_cache:
          keys:
            - android-sdk-cache-<< parameters.zip_hash >>-<< parameters.version >>
      - run:
          name:
          command: |
            mkdir -p $ANDROID_HOME
            cp -f .circleci/android/licenses $ANDROID_HOME/licenses

            if ! [[ -d $ANDROID_HOME/tools ]]; then
              wget -q -O sdk-tools.zip "https://dl.google.com/android/repository/sdk-tools-linux-<< parameters.zip_hash >>.zip"
              unzip -qq sdk-tools.zip -d $ANDROID_HOME
              rm sdk-tools.zip
            fi

            yes | $ANDROID_HOME/tools/bin/sdkmanager "build-tools;29.0.2" "build-tools;30.0.0" "build-tools;30.0.2" "platforms;android-29" "platform-tools" >/dev/null 2>&1 || if [ $? -ne '141' ]; then exit $?; fi;
      - save_cache:
          paths:
            - ~/android
          key: android-sdk-cache-<< parameters.zip_hash >>-<< parameters.version >>
  use_gradle_cache:
    parameters:
      cache_version:
        type: string
        default: v3
      prefix:
        type: string
    steps:
      - restore_cache:
          keys:
          - gradle-<< parameters.cache_version >>-<< parameters.prefix >>-{{ checksum "build.gradle" }}
          - gradle-<< parameters.cache_version >>-<< parameters.prefix >>-
          - gradle-<< parameters.cache_version >>-
          - gradle-
  save_gradle_cache:
    parameters:
      cache_version:
        type: string
        default: v3
      prefix:
        type: string
    steps:
      - save_cache:
          paths:
            - ~/.android
            - ~/.gradle
            - .gradle
            - ~/.m2
          key: gradle-<< parameters.cache_version >>-<< parameters.prefix >>-{{ checksum "build.gradle" }}
  acceptance_test:
    parameters:
      agp_version:
        type: string
      gradle_version:
        type: string
      no_aab_support:
        type: string
        default: "false"
      no_kts_support:
        type: string
        default: "false"
    steps:
      - run: rm -fr build/reports/tests/testPluginAcceptanceTest build/test-results/tests/testPluginAcceptanceTest || true
      - run: echo "Env. agp(<< parameters.agp_version >>) and gradle(<< parameters.gradle_version >>)"
      - run:
          command: ./gradlew testPluginAcceptanceTest
          environment:
            TEST_AGP_VERSION: << parameters.agp_version >>
            TEST_GRADLE_VERSION: << parameters.gradle_version >>
            NO_AAB_SUPPORT: << parameters.no_aab_support >>
            NO_KTS_SUPPORT: << parameters.no_kts_support >>
      - store_artifacts:
           path: build/reports/tests/testPluginAcceptanceTest
           destination: reports/tests/testPluginAcceptanceTest/<< parameters.agp_version >>
           when: always
      - store_test_results:
           path: build/test-results/tests/testPluginAcceptanceTest
           when: always

orbs:
  gradle:
    commands: *commands
    executors: *executors
    jobs:
      unit_tests:
        executor: android_java
        steps:
        - checkout
        - use_gradle_cache:
            prefix: unit
        - run: ./gradlew install test
        - save_gradle_cache:
            prefix: unit
        - store_artifacts:
            path: build/reports/tests/test
            when: always
        - store_test_results:
            path: build/test-results/tests/test
            when: always
      acceptance_tests:
        executor: acceptance_test
        steps:
        - checkout
        - download_sdk:
            zip_hash: "4333796"
            version: v2
        - use_gradle_cache:
            prefix: acceptance
        - run: ./gradlew testUnrollAcceptanceTest
        - store_artifacts:
            path: build/reports/tests/testUnrollAcceptanceTest
            when: always
        - store_test_results:
            path: build/test-results/tests/testUnrollAcceptanceTest
            when: always
        - acceptance_test:
            agp_version: '3.0.0'
            gradle_version: '4.1'
            no_aab_support: "true"
            no_kts_support: "true"
        - acceptance_test:
            agp_version: '3.1.0'
            gradle_version: '4.4'
            no_aab_support: "true"
            no_kts_support: "true"
        - acceptance_test:
            agp_version: '3.2.0'
            gradle_version: '4.6'
            no_kts_support: "true"
        - acceptance_test:
            agp_version: '3.3.2'
            gradle_version: '4.10.1'
        - acceptance_test:
            agp_version: '3.4.1'
            gradle_version: '5.1.1'
        - acceptance_test:
            agp_version: '3.5.1'
            gradle_version: '5.4.1'
        - acceptance_test:
            agp_version: '3.6.3'
            gradle_version: '5.6.4'
        - acceptance_test:
            agp_version: '4.1.0'
            gradle_version: '6.5'
        - acceptance_test:
            agp_version: '4.2.0-alpha13'
            gradle_version: '6.7-rc-4'
        - acceptance_test:
            agp_version: '4.2.0-alpha14'
            gradle_version: '6.7-rc-4'
        - save_gradle_cache:
            prefix: acceptance

workflows:
  version: 2
  on_commit:
    jobs:
    - gradle/unit_tests
    - gradle/acceptance_tests
